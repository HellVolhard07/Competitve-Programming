class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        if(nums.size() <= 2)
        return ans;
        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size()-2;)
        {
            int left = i + 1;
            int right = nums.size() - 1;
            while(left<right)
            {
                int currentSum = nums[i] + nums[left] + nums[right];
                if(currentSum == 0)
                {
                    ans.push_back({nums[i], nums[left], nums[right]});
                    int temp1 = nums[left];
                    int temp2 = nums[right];
                    while(left<right && nums[left] == temp1)
                    {
                        left++;
                    }
                    while(right>left && nums[right] == temp2)
                    {
                        right--;
                    }
                }
                else if(currentSum < 0)
                {
                    left++;
                }
                else if(currentSum > 0)
                {
                    right--;
                }
            }
            int j = i;
            while(j<nums.size() && nums[j] == nums[i])
            {
                j++;
            }
            i = j;
        }
        return ans;
    }
};
