class Solution {
public:
    
    int value(char x)
    {
        if(x == 'I')
        {
            return 1;
        }
        if(x == 'V')
        {
            return 5;
        }
        if(x == 'X')
        {
            return 10;
        }
        if(x == 'L')
        {
            return 50;
        }
        if(x == 'C')
        {
            return 100;
        }
        if(x == 'D')
        {
            return 500;
        }
        if(x == 'M')
        {
            return 1000;
        }
        return 0;
    }
    
    int romanToInt(string s) {
        int ans = 0;
        for(int i = 0 ; i <s.length() ; i++)
        {
            if(value(s[i])<value(s[i+1]))
            {
                ans = ans + value(s[i+1]) - value(s[i]);
                i++;
            }
            else
            {
                ans += value(s[i]);
            }
        }
        return ans;
    }
};


*********************************************************************************************************************************************************************************

USING MAPS

class Solution {
public:
    
    int romanToInt(string s) {
        int ans = 0;
        unordered_map<char, int> values;
        values.insert({'I',1});
        values.insert({'V',5});
        values.insert({'X',10});
        values.insert({'L',50});
        values.insert({'C',100});
        values.insert({'D',500});
        values.insert({'M',1000});
        for(int i = 0 ; i <s.length() ; i++)
        {
            if(values[s[i]]<values[s[i+1]])
            {
                ans = ans + values[s[i+1]] - values[s[i]];
                i++;
            }
            else
            {
                ans += values[s[i]];
            }
        }
        return ans;
    }
};
