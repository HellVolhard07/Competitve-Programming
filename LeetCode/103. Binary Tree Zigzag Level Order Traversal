int height(TreeNode* root) {
    if(!root) {
        return 0;
    }
    return max(height(root->left), height(root->right)) + 1;
}

void addLevel(TreeNode* root, int height, vector<vector<int>> &levels) {
    if(!root) {
        return;
    }
    levels[height].push_back(root->val);
    addLevel(root->left, height + 1 , levels);
    addLevel(root->right, height + 1, levels);
}

void zigzag(vector<vector<int>> &levels, int height) {
    if(height > 1) {
        for(int i = 1 ; i < height ; i += 2) {
            reverse(levels[i].begin(), levels[i].end());
        }
    }
}

class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        int h = height(root);
        vector<vector<int>> levels(h);
        addLevel(root, 0, levels);
        zigzag(levels, h);
        return levels;
    }
};
